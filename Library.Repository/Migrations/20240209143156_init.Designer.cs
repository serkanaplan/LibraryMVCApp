// <auto-generated />
using System;
using Library.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Repository.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20240209143156_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Core.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.HasIndex("CountryId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 1,
                            Img = "1.jpg",
                            NameSurname = "Ahmet Ümit"
                        },
                        new
                        {
                            AuthorId = 2,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 2,
                            Img = "2.jpg",
                            NameSurname = "Fyodor Dostoevsky"
                        },
                        new
                        {
                            AuthorId = 3,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 3,
                            Img = "3.jpg",
                            NameSurname = "Emile Zola"
                        },
                        new
                        {
                            AuthorId = 4,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 4,
                            Img = "4.jpg",
                            NameSurname = "George Orwell"
                        },
                        new
                        {
                            AuthorId = 5,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 5,
                            Img = "5.jpg",
                            NameSurname = "Geothe"
                        },
                        new
                        {
                            AuthorId = 6,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 1,
                            Img = "6.jpg",
                            NameSurname = "Halide Edip Adıvar"
                        },
                        new
                        {
                            AuthorId = 7,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 1,
                            Img = "7.jpg",
                            NameSurname = "İlber Ortaylı"
                        },
                        new
                        {
                            AuthorId = 8,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 8,
                            Img = "8.jpg",
                            NameSurname = "Karl Marx"
                        },
                        new
                        {
                            AuthorId = 9,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 9,
                            Img = "9.jpg",
                            NameSurname = "Levi Tolstoy"
                        },
                        new
                        {
                            AuthorId = 10,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 10,
                            Img = "10.jpg",
                            NameSurname = "Maksim Gorki"
                        },
                        new
                        {
                            AuthorId = 11,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 1,
                            Img = "11.jpg",
                            NameSurname = "Nazım Hikmet Ran"
                        },
                        new
                        {
                            AuthorId = 12,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 12,
                            Img = "12.jpg",
                            NameSurname = "Rene Descartes"
                        },
                        new
                        {
                            AuthorId = 13,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 1,
                            Img = "13.jpg",
                            NameSurname = "Sabahattin Ali"
                        },
                        new
                        {
                            AuthorId = 14,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 14,
                            Img = "14.jpg",
                            NameSurname = "Sigmund Freud"
                        },
                        new
                        {
                            AuthorId = 15,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 13,
                            Img = "15.jpg",
                            NameSurname = "Stefan Zweig"
                        },
                        new
                        {
                            AuthorId = 16,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 15,
                            Img = "16.jpg",
                            NameSurname = "Victor Hugo"
                        },
                        new
                        {
                            AuthorId = 17,
                            Biography = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            CountryId = 1,
                            Img = "17.jpg",
                            NameSurname = "Yaşar Kemal"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 9, 17, 31, 55, 481, DateTimeKind.Local).AddTicks(2018));

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("PublishedDate")
                        .HasColumnType("int");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int>("Rated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(565);

                    b.Property<int>("ShelfId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("ShelfId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "1.jpg",
                            LanguageId = 1,
                            PublishedDate = 2023,
                            PublisherId = 1,
                            Rated = 0,
                            ShelfId = 1,
                            Status = false,
                            Stock = 5,
                            Title = "Kırmızı Geçe"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "2.jpg",
                            LanguageId = 2,
                            PublishedDate = 1944,
                            PublisherId = 2,
                            Rated = 0,
                            ShelfId = 2,
                            Status = false,
                            Stock = 5,
                            Title = "Suç Ve Ceza"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "3.jpg",
                            LanguageId = 3,
                            PublishedDate = 2009,
                            PublisherId = 3,
                            Rated = 0,
                            ShelfId = 3,
                            Status = false,
                            Stock = 5,
                            Title = "Yaşama Sevinci"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4,
                            CategoryId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "4.jpg",
                            LanguageId = 4,
                            PublishedDate = 1949,
                            PublisherId = 4,
                            Rated = 0,
                            ShelfId = 4,
                            Status = false,
                            Stock = 5,
                            Title = "1984"
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 5,
                            CategoryId = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "5.jpg",
                            LanguageId = 5,
                            PublishedDate = 2016,
                            PublisherId = 5,
                            Rated = 0,
                            ShelfId = 5,
                            Status = false,
                            Stock = 5,
                            Title = "Prometheus"
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 6,
                            CategoryId = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "6.jpg",
                            LanguageId = 6,
                            PublishedDate = 1959,
                            PublisherId = 6,
                            Rated = 0,
                            ShelfId = 6,
                            Status = false,
                            Stock = 5,
                            Title = "Sinekli Bakkal"
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 7,
                            CategoryId = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "7.jpg",
                            LanguageId = 7,
                            PublishedDate = 1939,
                            PublisherId = 7,
                            Rated = 0,
                            ShelfId = 7,
                            Status = false,
                            Stock = 5,
                            Title = "Avrupa Ve Biz"
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 8,
                            CategoryId = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "8.jpg",
                            LanguageId = 8,
                            PublishedDate = 2018,
                            PublisherId = 8,
                            Rated = 0,
                            ShelfId = 8,
                            Status = false,
                            Stock = 5,
                            Title = "Devlet Ve Hukuk"
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 9,
                            CategoryId = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "9.jpg",
                            LanguageId = 9,
                            PublishedDate = 1944,
                            PublisherId = 9,
                            Rated = 0,
                            ShelfId = 9,
                            Status = false,
                            Stock = 5,
                            Title = "Anna Karenina"
                        },
                        new
                        {
                            BookId = 10,
                            AuthorId = 10,
                            CategoryId = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "10.jpg",
                            LanguageId = 10,
                            PublishedDate = 2019,
                            PublisherId = 10,
                            Rated = 0,
                            ShelfId = 10,
                            Status = false,
                            Stock = 5,
                            Title = "Arkadaş"
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 11,
                            CategoryId = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "11.jpg",
                            LanguageId = 11,
                            PublishedDate = 1940,
                            PublisherId = 11,
                            Rated = 0,
                            ShelfId = 11,
                            Status = false,
                            Stock = 5,
                            Title = "Kan Konuşmaz"
                        },
                        new
                        {
                            BookId = 12,
                            AuthorId = 12,
                            CategoryId = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "12.jpg",
                            LanguageId = 12,
                            PublishedDate = 2012,
                            PublisherId = 12,
                            Rated = 0,
                            ShelfId = 12,
                            Status = false,
                            Stock = 5,
                            Title = "Ruhun Tutkuları"
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 13,
                            CategoryId = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "13.jpg",
                            LanguageId = 13,
                            PublishedDate = 2014,
                            PublisherId = 13,
                            Rated = 0,
                            ShelfId = 13,
                            Status = false,
                            Stock = 5,
                            Title = "İçimizdeki Şeytan"
                        },
                        new
                        {
                            BookId = 14,
                            AuthorId = 14,
                            CategoryId = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "14.jpg",
                            LanguageId = 14,
                            PublishedDate = 1938,
                            PublisherId = 14,
                            Rated = 0,
                            ShelfId = 14,
                            Status = false,
                            Stock = 5,
                            Title = "Kitle Psikolojisi"
                        },
                        new
                        {
                            BookId = 15,
                            AuthorId = 15,
                            CategoryId = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Img = "15.jpg",
                            LanguageId = 15,
                            PublishedDate = 1975,
                            PublisherId = 15,
                            Rated = 0,
                            ShelfId = 15,
                            Status = false,
                            Stock = 5,
                            Title = "Satranç"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Img = "1.jpg",
                            Name = "Fantastik"
                        },
                        new
                        {
                            CategoryId = 2,
                            Img = "2.jpeg",
                            Name = "Korku"
                        },
                        new
                        {
                            CategoryId = 3,
                            Img = "3.jpeg",
                            Name = "Romantik"
                        },
                        new
                        {
                            CategoryId = 4,
                            Img = "4.jpeg",
                            Name = "Bilim"
                        },
                        new
                        {
                            CategoryId = 5,
                            Img = "5.jpg",
                            Name = "Edebiyat"
                        },
                        new
                        {
                            CategoryId = 6,
                            Img = "6.jpg",
                            Name = "Hikaye"
                        },
                        new
                        {
                            CategoryId = 7,
                            Img = "7.jpg",
                            Name = "Tarih"
                        },
                        new
                        {
                            CategoryId = 8,
                            Img = "8.jpeg",
                            Name = "Cocuk"
                        },
                        new
                        {
                            CategoryId = 9,
                            Img = "9.jpeg",
                            Name = "Saglik"
                        },
                        new
                        {
                            CategoryId = 10,
                            Img = "10.jpg",
                            Name = "Spor"
                        },
                        new
                        {
                            CategoryId = 11,
                            Img = "11.jpeg",
                            Name = "Klasik"
                        },
                        new
                        {
                            CategoryId = 12,
                            Img = "12.jpg",
                            Name = "Yabanci"
                        },
                        new
                        {
                            CategoryId = 13,
                            Img = "13.jpeg",
                            Name = "Dil"
                        },
                        new
                        {
                            CategoryId = 14,
                            Img = "14.jpeg",
                            Name = "Roman"
                        },
                        new
                        {
                            CategoryId = 15,
                            Img = "15.jpeg",
                            Name = "Anı"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Img = "1.png",
                            Name = "Turkey"
                        },
                        new
                        {
                            CountryId = 2,
                            Img = "2.jpg",
                            Name = "Germany"
                        },
                        new
                        {
                            CountryId = 3,
                            Img = "3.jpg",
                            Name = "England"
                        },
                        new
                        {
                            CountryId = 4,
                            Img = "4.jpg",
                            Name = "France"
                        },
                        new
                        {
                            CountryId = 5,
                            Img = "5.jpg",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryId = 6,
                            Img = "6.jpg",
                            Name = "Spain"
                        },
                        new
                        {
                            CountryId = 7,
                            Img = "7.jpg",
                            Name = "Portugal"
                        },
                        new
                        {
                            CountryId = 8,
                            Img = "8.jpg",
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryId = 9,
                            Img = "9.jpg",
                            Name = "Russia"
                        },
                        new
                        {
                            CountryId = 10,
                            Img = "10.jpg",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryId = 11,
                            Img = "11.jpg",
                            Name = "Australia"
                        },
                        new
                        {
                            CountryId = 12,
                            Img = "12.jpg",
                            Name = "China"
                        },
                        new
                        {
                            CountryId = 13,
                            Img = "13.jpg",
                            Name = "Japan"
                        },
                        new
                        {
                            CountryId = 14,
                            Img = "14.jpg",
                            Name = "India"
                        },
                        new
                        {
                            CountryId = 15,
                            Img = "15.jpg",
                            Name = "Romania"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = 1,
                            Name = "Turkce"
                        },
                        new
                        {
                            LanguageId = 2,
                            Name = "Ingilizce"
                        },
                        new
                        {
                            LanguageId = 3,
                            Name = "Almanca"
                        },
                        new
                        {
                            LanguageId = 4,
                            Name = "Rusca"
                        },
                        new
                        {
                            LanguageId = 5,
                            Name = "Ispanyolca"
                        },
                        new
                        {
                            LanguageId = 6,
                            Name = "Fransizca"
                        },
                        new
                        {
                            LanguageId = 7,
                            Name = "Italyanca"
                        },
                        new
                        {
                            LanguageId = 8,
                            Name = "Arabca"
                        },
                        new
                        {
                            LanguageId = 9,
                            Name = "Portekizce"
                        },
                        new
                        {
                            LanguageId = 10,
                            Name = "Japonca"
                        },
                        new
                        {
                            LanguageId = 11,
                            Name = "Korece"
                        },
                        new
                        {
                            LanguageId = 12,
                            Name = "Cince"
                        },
                        new
                        {
                            LanguageId = 13,
                            Name = "Ibranice"
                        },
                        new
                        {
                            LanguageId = 14,
                            Name = "Bengalce"
                        },
                        new
                        {
                            LanguageId = 15,
                            Name = "Hintce"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            Name = "İş Bankası"
                        },
                        new
                        {
                            PublisherId = 2,
                            Name = "Eksen"
                        },
                        new
                        {
                            PublisherId = 3,
                            Name = "Sarmal"
                        },
                        new
                        {
                            PublisherId = 4,
                            Name = "Evren"
                        },
                        new
                        {
                            PublisherId = 5,
                            Name = "Kırmızı"
                        },
                        new
                        {
                            PublisherId = 6,
                            Name = "Tutku"
                        },
                        new
                        {
                            PublisherId = 7,
                            Name = "Yapıtaş"
                        },
                        new
                        {
                            PublisherId = 8,
                            Name = "Simya"
                        },
                        new
                        {
                            PublisherId = 9,
                            Name = "Sandal"
                        },
                        new
                        {
                            PublisherId = 10,
                            Name = "Kütük"
                        },
                        new
                        {
                            PublisherId = 11,
                            Name = "Ayçiçeği"
                        },
                        new
                        {
                            PublisherId = 12,
                            Name = "Kızılcık"
                        },
                        new
                        {
                            PublisherId = 13,
                            Name = "KocaÇınar"
                        },
                        new
                        {
                            PublisherId = 14,
                            Name = "Papatya"
                        },
                        new
                        {
                            PublisherId = 15,
                            Name = "Turna"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Shelf", b =>
                {
                    b.Property<int>("ShelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelfId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShelfId");

                    b.ToTable("Shelves");

                    b.HasData(
                        new
                        {
                            ShelfId = 1,
                            Name = "A1"
                        },
                        new
                        {
                            ShelfId = 2,
                            Name = "A2"
                        },
                        new
                        {
                            ShelfId = 3,
                            Name = "A3"
                        },
                        new
                        {
                            ShelfId = 4,
                            Name = "B1"
                        },
                        new
                        {
                            ShelfId = 5,
                            Name = "B2"
                        },
                        new
                        {
                            ShelfId = 6,
                            Name = "B3"
                        },
                        new
                        {
                            ShelfId = 7,
                            Name = "C1"
                        },
                        new
                        {
                            ShelfId = 8,
                            Name = "C2"
                        },
                        new
                        {
                            ShelfId = 9,
                            Name = "C3"
                        },
                        new
                        {
                            ShelfId = 10,
                            Name = "D1"
                        },
                        new
                        {
                            ShelfId = 11,
                            Name = "D2"
                        },
                        new
                        {
                            ShelfId = 12,
                            Name = "D3"
                        },
                        new
                        {
                            ShelfId = 13,
                            Name = "E1"
                        },
                        new
                        {
                            ShelfId = 14,
                            Name = "E2"
                        },
                        new
                        {
                            ShelfId = 15,
                            Name = "E3"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SystemReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TransactionStatus")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UserReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            BookId = 1,
                            SystemReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionStatus = false,
                            UserId = 1
                        },
                        new
                        {
                            TransactionId = 2,
                            BookId = 2,
                            SystemReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionStatus = false,
                            UserId = 2
                        },
                        new
                        {
                            TransactionId = 3,
                            BookId = 3,
                            SystemReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionStatus = false,
                            UserId = 3
                        },
                        new
                        {
                            TransactionId = 4,
                            BookId = 4,
                            SystemReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionStatus = false,
                            UserId = 4
                        },
                        new
                        {
                            TransactionId = 5,
                            BookId = 5,
                            SystemReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionStatus = false,
                            UserId = 5
                        },
                        new
                        {
                            TransactionId = 6,
                            BookId = 6,
                            SystemReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionStatus = false,
                            UserId = 6
                        },
                        new
                        {
                            TransactionId = 7,
                            BookId = 7,
                            SystemReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionStatus = false,
                            UserId = 7
                        },
                        new
                        {
                            TransactionId = 8,
                            BookId = 8,
                            SystemReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionStatus = false,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("Library.Core.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PenaltyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReadBookCount")
                        .HasColumnType("int");

                    b.Property<bool>("RegistrationStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("Role")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Age = 20,
                            Email = "serkan@gmail.com",
                            Gender = true,
                            Img = "1.jpeg",
                            MembershipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Serkan",
                            Password = "123",
                            ReadBookCount = 0,
                            RegistrationStatus = false,
                            Role = true,
                            Surname = "Kaplan",
                            Tin = "1234"
                        },
                        new
                        {
                            UserId = 2,
                            Age = 51,
                            Email = "merve@gmail.com",
                            Gender = false,
                            Img = "2.jpeg",
                            MembershipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Merve",
                            Password = "123",
                            ReadBookCount = 0,
                            RegistrationStatus = false,
                            Role = false,
                            Surname = "kara",
                            Tin = "1456"
                        },
                        new
                        {
                            UserId = 3,
                            Age = 45,
                            Email = "sadık@gmail.com",
                            Gender = true,
                            Img = "3.jpeg",
                            MembershipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sadık",
                            Password = "123",
                            ReadBookCount = 0,
                            RegistrationStatus = false,
                            Role = false,
                            Surname = "şimşek",
                            Tin = "1234"
                        },
                        new
                        {
                            UserId = 4,
                            Age = 22,
                            Email = "sarp@gmail.com",
                            Gender = true,
                            Img = "4.jpeg",
                            MembershipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sarp",
                            Password = "123",
                            ReadBookCount = 0,
                            RegistrationStatus = false,
                            Role = false,
                            Surname = "Sarı",
                            Tin = "4165"
                        },
                        new
                        {
                            UserId = 5,
                            Age = 24,
                            Email = "sedef@gmail.com",
                            Gender = false,
                            Img = "5.jpeg",
                            MembershipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sedef",
                            Password = "123",
                            ReadBookCount = 0,
                            RegistrationStatus = false,
                            Role = false,
                            Surname = "Karaca",
                            Tin = "1234"
                        },
                        new
                        {
                            UserId = 6,
                            Age = 17,
                            Email = "sibel@gmail.com",
                            Gender = false,
                            Img = "6.jpeg",
                            MembershipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "sibel",
                            Password = "123",
                            ReadBookCount = 0,
                            RegistrationStatus = false,
                            Role = false,
                            Surname = "Karaca",
                            Tin = "1234"
                        },
                        new
                        {
                            UserId = 7,
                            Age = 29,
                            Email = "Suzan@gmail.com",
                            Gender = false,
                            Img = "7.jpeg",
                            MembershipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Suzan",
                            Password = "123",
                            ReadBookCount = 0,
                            RegistrationStatus = false,
                            Role = false,
                            Surname = "Karaca",
                            Tin = "1234"
                        },
                        new
                        {
                            UserId = 8,
                            Age = 29,
                            Email = "mehmet@gmail.com",
                            Gender = true,
                            Img = "8.jpeg",
                            MembershipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mehmet",
                            Password = "123",
                            ReadBookCount = 0,
                            RegistrationStatus = false,
                            Role = false,
                            Surname = "Aker",
                            Tin = "1234"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Author", b =>
                {
                    b.HasOne("Library.Core.Models.Country", "Country")
                        .WithMany("Authors")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Library.Core.Models.Book", b =>
                {
                    b.HasOne("Library.Core.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Core.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Core.Models.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Core.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Core.Models.Shelf", "Shelf")
                        .WithMany("Books")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");

                    b.Navigation("Language");

                    b.Navigation("Publisher");

                    b.Navigation("Shelf");
                });

            modelBuilder.Entity("Library.Core.Models.Transaction", b =>
                {
                    b.HasOne("Library.Core.Models.Book", "Books")
                        .WithMany("Transaction")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Core.Models.User", "Users")
                        .WithMany("Transaction")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Library.Core.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Core.Models.Book", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Library.Core.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Core.Models.Country", b =>
                {
                    b.Navigation("Authors");
                });

            modelBuilder.Entity("Library.Core.Models.Language", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Core.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Core.Models.Shelf", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Core.Models.User", b =>
                {
                    b.Navigation("Transaction");
                });
#pragma warning restore 612, 618
        }
    }
}
